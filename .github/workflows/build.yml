name: Build Zed Stable

on:
  schedule:
    - cron: "0 */12 * * *"  # 每12小时触发一次
  push:
    tags:
      - 'v*.*.*'  # 仅当创建符合稳定版命名规则的新标签时触发

jobs:
  check-and-trigger:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get latest tag from Zed Industries
        id: get_latest_tag
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/zed-industries/zed/releases/latest | jq -r '.tag_name')
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
          echo "Latest tag: $latest_tag"

      - name: Compare with last known tag
        id: compare_tags
        run: |
          if [ -f last_known_tag.txt ]; then
            last_known_tag=$(cat last_known_tag.txt)
          else
            last_known_tag=""
          fi
          echo "Last known tag: $last_known_tag"
          echo "Latest tag: ${{ env.LATEST_TAG }}"

          if [ "$last_known_tag" != "${{ env.LATEST_TAG }}" ]; then
            echo "::set-output name=TRIGGER_BUILD::true"
          else
            echo "::set-output name=TRIGGER_BUILD::false"
          fi

      - name: Save latest tag
        run: |
          echo "${{ env.LATEST_TAG }}" > last_known_tag.txt
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add last_known_tag.txt
          git commit -m "Update last known tag"
          git push

      - name: Trigger build
        if: ${{ steps.compare_tags.outputs.TRIGGER_BUILD == 'true' }}
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/your-username/your-repo/dispatches \
            -d '{"event_type":"build-zed", "client_payload":{}}'

  build:
    needs: check-and-trigger
    if: ${{ needs.check-and-trigger.outputs.TRIGGER_BUILD == 'true' }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: zed-industries/zed
          ref: ${{ env.LATEST_TAG }}

      - name: Install rust nightly
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          override: true
          target: wasm32-wasip1

      - name: Build release
        env:
          RUSTFLAGS: "-C target-cpu=native"
        run: |
          set -e
          cargo build --release --jobs 4

      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: zed-release-${{ matrix.os }}
          path: target/release/zed

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Get the current tag name
        id: tag
        run: echo "TAG_NAME=${{ env.LATEST_TAG }}" >> $GITHUB_ENV

      - name: Create release zip
        run: |
          mkdir -p zed-release
          mv artifacts/zed-release-*/* zed-release/
          zip -r zed-${{ env.TAG_NAME }}-multi-platform.zip zed-release/*

      - name: Upload release build artifacts to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.TAG_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          make_latest: true
          files: |
            zed-${{ env.TAG_NAME }}-multi-platform.zip